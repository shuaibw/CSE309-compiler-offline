Line no 1: Token <INT> Lexeme int found

Line no 1: Token <ID> Lexeme x found

Line no 1: Token <COMMA> Lexeme , found

Line no 1: Token <ID> Lexeme y found

Line no 1: Token <COMMA> Lexeme , found

Line no 1: Token <ID> Lexeme z found

Line no 1: Token <SEMICOLON> Lexeme ; found

Line no 2: Token <FLOAT> Lexeme float found

Line no 2: Token <ID> Lexeme ab found

Line no 2: Token <SEMICOLON> Lexeme ; found

Line no 4: Token <VOID> Lexeme void found

Line no 4: Token <ID> Lexeme foo found

Line no 4: Token <LPAREN> Lexeme ( found

Line no 4: Token <RPAREN> Lexeme ) found

Line no 4: Token <SEMICOLON> Lexeme ; found

Line no 5: Token <INT> Lexeme int found

Line no 5: Token <ID> Lexeme var found

Line no 5: Token <LPAREN> Lexeme ( found

Line no 5: Token <INT> Lexeme int found

Line no 5: Token <ID> Lexeme a found

Line no 5: Token <COMMA> Lexeme , found

Line no 5: Token <INT> Lexeme int found

Line no 5: Token <ID> Lexeme b found

Line no 5: Token <RPAREN> Lexeme ) found

Line no 5: Token <SEMICOLON> Lexeme ; found

Line no 7: Token <INT> Lexeme int found

Line no 7: Token <ID> Lexeme var found

Line no 7: Token <LPAREN> Lexeme ( found

Line no 7: Token <INT> Lexeme int found

Line no 7: Token <ID> Lexeme a found

Line no 7: Token <COMMA> Lexeme , found

Line no 7: Token <INT> Lexeme int found

Line no 7: Token <ID> Lexeme b found

Line no 7: Token <RPAREN> Lexeme ) found

Line no 7: Token <LCURL> Lexeme { found

< var : ID > already exists in ScopeTable# 1 at position 0, 0

Line no 8: Token <ID> Lexeme a found

Line no 8: Token <ASSIGNOP> Lexeme = found

Line no 8: Token <ID> Lexeme a found

Line no 8: Token <ADDOP> Lexeme + found

Line no 8: Token <ID> Lexeme y found

Line no 8: Token <MULOP> Lexeme * found

Line no 8: Token <CONST_INT> Lexeme 2 found

Line no 8: Token <SEMICOLON> Lexeme ; found

Line no 9: Token <RETURN> Lexeme return found

Line no 9: Token <ID> Lexeme a found

Line no 9: Token <ADDOP> Lexeme + found

Line no 9: Token <ID> Lexeme b found

Line no 9: Token <SEMICOLON> Lexeme ; found

Line no 10: Token <RCURL> Lexeme } found

Line no 12: Token <VOID> Lexeme void found

Line no 12: Token <ID> Lexeme foo found

Line no 12: Token <LPAREN> Lexeme ( found

Line no 12: Token <RPAREN> Lexeme ) found

Line no 12: Token <LCURL> Lexeme { found

< foo : ID > already exists in ScopeTable# 1 at position 4, 0

Line no 13: Token <ID> Lexeme x found

Line no 13: Token <ASSIGNOP> Lexeme = found

Line no 13: Token <CONST_INT> Lexeme 2 found

Line no 13: Token <SEMICOLON> Lexeme ; found

Line no 14: Token <ID> Lexeme y found

Line no 14: Token <ASSIGNOP> Lexeme = found

Line no 14: Token <ID> Lexeme x found

Line no 14: Token <ADDOP> Lexeme - found

Line no 14: Token <CONST_INT> Lexeme 5 found

Line no 14: Token <SEMICOLON> Lexeme ; found

Line no 15: Token <RCURL> Lexeme } found

Line no 17: Token <INT> Lexeme int found

Line no 17: Token <ID> Lexeme main found

Line no 17: Token <LPAREN> Lexeme ( found

Line no 17: Token <RPAREN> Lexeme ) found

Line no 17: Token <LCURL> Lexeme { found

Line no 18: Token <INT> Lexeme int found

Line no 18: Token <ID> Lexeme c found

Line no 18: Token <COMMA> Lexeme , found

Line no 18: Token <ID> Lexeme i found

Line no 18: Token <COMMA> Lexeme , found

Line no 18: Token <ID> Lexeme a found

Line no 18: Token <LTHIRD> Lexeme [ found

Line no 18: Token <CONST_INT> Lexeme 2 found

Line no 18: Token <RTHIRD> Lexeme ] found

Line no 18: Token <COMMA> Lexeme , found

Line no 18: Token <ID> Lexeme j found

Line no 18: Token <SEMICOLON> Lexeme ; found

Line no 18: Token <FLOAT> Lexeme float found

Line no 18: Token <ID> Lexeme d found

Line no 18: Token <SEMICOLON> Lexeme ; found

Line no 19: Token <ID> Lexeme c found

Line no 19: Token <ASSIGNOP> Lexeme = found

Line no 19: Token <CONST_INT> Lexeme 4 found

Line no 19: Token <SEMICOLON> Lexeme ; found

Line no 20: Token <ID> Lexeme d found

Line no 20: Token <ASSIGNOP> Lexeme = found

Line no 20: Token <CONST_FLOAT> Lexeme 9.5 found

Line no 20: Token <SEMICOLON> Lexeme ; found

Line no 21: Token <ID> Lexeme j found

Line no 21: Token <ASSIGNOP> Lexeme = found

Line no 21: Token <CONST_INT> Lexeme 9 found

Line no 21: Token <SEMICOLON> Lexeme ; found

Line no 23: Token <LCURL> Lexeme { found

Line no 24: Token <ID> Lexeme a found

Line no 24: Token <LTHIRD> Lexeme [ found

Line no 24: Token <CONST_INT> Lexeme 0 found

Line no 24: Token <RTHIRD> Lexeme ] found

Line no 24: Token <ASSIGNOP> Lexeme = found

Line no 24: Token <CONST_INT> Lexeme 1 found

Line no 24: Token <SEMICOLON> Lexeme ; found

Line no 25: Token <ID> Lexeme a found

Line no 25: Token <LTHIRD> Lexeme [ found

Line no 25: Token <CONST_INT> Lexeme 1 found

Line no 25: Token <RTHIRD> Lexeme ] found

Line no 25: Token <ASSIGNOP> Lexeme = found

Line no 25: Token <ID> Lexeme var found

Line no 25: Token <LPAREN> Lexeme ( found

Line no 25: Token <ID> Lexeme c found

Line no 25: Token <COMMA> Lexeme , found

Line no 25: Token <ID> Lexeme j found

Line no 25: Token <RPAREN> Lexeme ) found

Line no 25: Token <SEMICOLON> Lexeme ; found

Line no 26: Token <RCURL> Lexeme } found

Line no 27: Token <ID> Lexeme i found

Line no 27: Token <ASSIGNOP> Lexeme = found

Line no 27: Token <ID> Lexeme a found

Line no 27: Token <LTHIRD> Lexeme [ found

Line no 27: Token <CONST_INT> Lexeme 0 found

Line no 27: Token <RTHIRD> Lexeme ] found

Line no 27: Token <ADDOP> Lexeme + found

Line no 27: Token <ID> Lexeme a found

Line no 27: Token <LTHIRD> Lexeme [ found

Line no 27: Token <CONST_INT> Lexeme 1 found

Line no 27: Token <RTHIRD> Lexeme ] found

Line no 27: Token <SEMICOLON> Lexeme ; found

Line no 29: Token <IF> Lexeme if found

Line no 29: Token <LPAREN> Lexeme ( found

Line no 29: Token <ID> Lexeme c found

Line no 29: Token <RELOP> Lexeme < found

Line no 29: Token <ID> Lexeme a found

Line no 29: Token <LTHIRD> Lexeme [ found

Line no 29: Token <CONST_INT> Lexeme 0 found

Line no 29: Token <RTHIRD> Lexeme ] found

Line no 29: Token <RPAREN> Lexeme ) found

Line no 29: Token <LCURL> Lexeme { found

Line no 30: Token <ID> Lexeme c found

Line no 30: Token <ASSIGNOP> Lexeme = found

Line no 30: Token <CONST_INT> Lexeme 7 found

Line no 30: Token <SEMICOLON> Lexeme ; found

Line no 31: Token <RCURL> Lexeme } found

Line no 34: Token <IF> Lexeme if found

Line no 34: Token <LPAREN> Lexeme ( found

Line no 34: Token <ID> Lexeme c found

Line no 34: Token <RELOP> Lexeme < found

Line no 34: Token <ID> Lexeme d found

Line no 34: Token <RPAREN> Lexeme ) found

Line no 34: Token <LCURL> Lexeme { found

Line no 35: Token <ID> Lexeme a found

Line no 35: Token <LTHIRD> Lexeme [ found

Line no 35: Token <CONST_INT> Lexeme 1 found

Line no 35: Token <RTHIRD> Lexeme ] found

Line no 35: Token <ASSIGNOP> Lexeme = found

Line no 35: Token <ADDOP> Lexeme - found

Line no 35: Token <ID> Lexeme a found

Line no 35: Token <LTHIRD> Lexeme [ found

Line no 35: Token <CONST_INT> Lexeme 1 found

Line no 35: Token <RTHIRD> Lexeme ] found

Line no 35: Token <SEMICOLON> Lexeme ; found

Line no 35: Token <SEMICOLON> Lexeme ; found

Line no 36: Token <RCURL> Lexeme } found

Line no 37: Token <ELSE> Lexeme else found

Line no 37: Token <IF> Lexeme if found

Line no 37: Token <LPAREN> Lexeme ( found

Line no 37: Token <ID> Lexeme c found

Line no 37: Token <RELOP> Lexeme < found

Line no 37: Token <CONST_INT> Lexeme 2 found

Line no 37: Token <MULOP> Lexeme * found

Line no 37: Token <ID> Lexeme d found

Line no 37: Token <RPAREN> Lexeme ) found

Line no 37: Token <LCURL> Lexeme { found

Line no 38: Token <ID> Lexeme a found

Line no 38: Token <LTHIRD> Lexeme [ found

Line no 38: Token <CONST_INT> Lexeme 0 found

Line no 38: Token <RTHIRD> Lexeme ] found

Line no 38: Token <ASSIGNOP> Lexeme = found

Line no 38: Token <NOT> Lexeme ! found

Line no 38: Token <LPAREN> Lexeme ( found

Line no 38: Token <CONST_INT> Lexeme 7 found

Line no 38: Token <RELOP> Lexeme < found

Line no 38: Token <CONST_INT> Lexeme 5 found

Line no 38: Token <RPAREN> Lexeme ) found

Line no 38: Token <SEMICOLON> Lexeme ; found

Line no 39: Token <RCURL> Lexeme } found

Line no 40: Token <ELSE> Lexeme else found

Line no 40: Token <LCURL> Lexeme { found

Line no 41: Token <ID> Lexeme d found

Line no 41: Token <ASSIGNOP> Lexeme = found

Line no 41: Token <CONST_INT> Lexeme 2 found

Line no 41: Token <SEMICOLON> Lexeme ; found

Line no 42: Token <RCURL> Lexeme } found

Line no 44: Token <FOR> Lexeme for found

Line no 44: Token <LPAREN> Lexeme ( found

Line no 44: Token <ID> Lexeme c found

Line no 44: Token <ASSIGNOP> Lexeme = found

Line no 44: Token <CONST_INT> Lexeme 0 found

Line no 44: Token <SEMICOLON> Lexeme ; found

Line no 44: Token <ID> Lexeme c found

Line no 44: Token <RELOP> Lexeme < found

Line no 44: Token <CONST_INT> Lexeme 2 found

Line no 44: Token <MULOP> Lexeme * found

Line no 44: Token <ID> Lexeme d found

Line no 44: Token <ADDOP> Lexeme + found

Line no 44: Token <CONST_INT> Lexeme 3 found

Line no 44: Token <SEMICOLON> Lexeme ; found

Line no 44: Token <ID> Lexeme c found

Line no 44: Token <INCOP> Lexeme ++ found

Line no 44: Token <RPAREN> Lexeme ) found

Line no 44: Token <LCURL> Lexeme { found

Line no 45: Token <ID> Lexeme a found

Line no 45: Token <LTHIRD> Lexeme [ found

Line no 45: Token <CONST_INT> Lexeme 0 found

Line no 45: Token <RTHIRD> Lexeme ] found

Line no 45: Token <ASSIGNOP> Lexeme = found

Line no 45: Token <ID> Lexeme a found

Line no 45: Token <LTHIRD> Lexeme [ found

Line no 45: Token <CONST_INT> Lexeme 0 found

Line no 45: Token <RTHIRD> Lexeme ] found

Line no 45: Token <MULOP> Lexeme * found

Line no 45: Token <CONST_INT> Lexeme 4 found

Line no 45: Token <SEMICOLON> Lexeme ; found

Line no 46: Token <RCURL> Lexeme } found

Line no 48: Token <WHILE> Lexeme while found

Line no 48: Token <LPAREN> Lexeme ( found

Line no 48: Token <ID> Lexeme a found

Line no 48: Token <LTHIRD> Lexeme [ found

Line no 48: Token <CONST_INT> Lexeme 0 found

Line no 48: Token <RTHIRD> Lexeme ] found

Line no 48: Token <DECOP> Lexeme -- found

Line no 48: Token <RPAREN> Lexeme ) found

Line no 48: Token <LCURL> Lexeme { found

Line no 49: Token <ID> Lexeme c found

Line no 49: Token <ASSIGNOP> Lexeme = found

Line no 49: Token <ID> Lexeme c found

Line no 49: Token <ADDOP> Lexeme - found

Line no 49: Token <CONST_INT> Lexeme 2 found

Line no 49: Token <SEMICOLON> Lexeme ; found

Line no 50: Token <RCURL> Lexeme } found

Line no 52: Token <LPAREN> Lexeme ( found

Line no 52: Token <ID> Lexeme c found

Line no 52: Token <RPAREN> Lexeme ) found

Line no 52: Token <SEMICOLON> Lexeme ; found

Line no 56: Token <ID> Lexeme j found

Line no 56: Token <ASSIGNOP> Lexeme = found

Line no 56: Token <CONST_INT> Lexeme 2 found

Line no 56: Token <MULOP> Lexeme * found

Line no 56: Token <CONST_INT> Lexeme 3 found

Line no 56: Token <ADDOP> Lexeme + found

Line no 56: Token <LPAREN> Lexeme ( found

Line no 56: Token <CONST_INT> Lexeme 5 found

Line no 56: Token <MULOP> Lexeme % found

Line no 56: Token <CONST_INT> Lexeme 3 found

Line no 56: Token <RELOP> Lexeme < found

Line no 56: Token <CONST_INT> Lexeme 4 found

Line no 56: Token <LOGICOP> Lexeme && found

Line no 56: Token <CONST_INT> Lexeme 8 found

Line no 56: Token <RPAREN> Lexeme ) found

Line no 56: Token <LOGICOP> Lexeme || found

Line no 56: Token <CONST_INT> Lexeme 2 found

Line no 56: Token <SEMICOLON> Lexeme ; found

Line no 57: Token <ID> Lexeme d found

Line no 57: Token <ASSIGNOP> Lexeme = found

Line no 57: Token <ID> Lexeme var found

Line no 57: Token <LPAREN> Lexeme ( found

Line no 57: Token <CONST_INT> Lexeme 1 found

Line no 57: Token <COMMA> Lexeme , found

Line no 57: Token <CONST_INT> Lexeme 2 found

Line no 57: Token <MULOP> Lexeme * found

Line no 57: Token <CONST_INT> Lexeme 3 found

Line no 57: Token <RPAREN> Lexeme ) found

Line no 57: Token <ADDOP> Lexeme + found

Line no 57: Token <CONST_FLOAT> Lexeme 3.5 found

Line no 57: Token <MULOP> Lexeme * found

Line no 57: Token <CONST_INT> Lexeme 2 found

Line no 57: Token <SEMICOLON> Lexeme ; found

Line no 58: Token <RETURN> Lexeme return found

Line no 58: Token <CONST_INT> Lexeme 0 found

Line no 58: Token <SEMICOLON> Lexeme ; found

Line no 59: Token <RCURL> Lexeme } found

ScopeTable # 1
0 --> < var : ID >
1 --> < x : ID >
2 --> < y : ID >
3 --> < z : ID >
4 --> < foo : ID >
5 --> < ab : ID >
6 --> < main : ID >

Total lines: 60
Total errors: 0
