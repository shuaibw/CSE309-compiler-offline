<INT> <ID, main> <LPAREN, (> <RPAREN, )> <LCURL, {> <INT> <ID, i> <COMMA, ,> <ID, j> <COMMA, ,> <ID, k> <COMMA, ,> <ID, ll> <SEMICOLON, ;> <FOR> <LPAREN, (> <ID, i> <ASSIGNOP, => <CONST_INT, 0> <SEMICOLON, ;> <ID, i> <RELOP, <> <CONST_INT, 6> <SEMICOLON, ;> <ID, i> <INCOP, ++> <RPAREN, )> <LCURL, {> <LPAREN, (> <ID, i> <RPAREN, )> <SEMICOLON, ;> <RCURL, }> <ID, k> <ASSIGNOP, => <CONST_INT, 4> <SEMICOLON, ;> <ID, ll> <ASSIGNOP, => <CONST_INT, 6> <SEMICOLON, ;> <WHILE> <LPAREN, (> <ID, k> <RELOP, >> <CONST_INT, 0> <RPAREN, )> <LCURL, {> <ID, ll> <ASSIGNOP, => <ID, ll> <ADDOP, +> <CONST_INT, 3> <SEMICOLON, ;> <ID, k> <DECOP, --> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, ll> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, k> <RPAREN, )> <SEMICOLON, ;> <ID, k> <ASSIGNOP, => <CONST_INT, 4> <SEMICOLON, ;> <ID, ll> <ASSIGNOP, => <CONST_INT, 6> <SEMICOLON, ;> <WHILE> <LPAREN, (> <ID, k> <DECOP, --> <RPAREN, )> <LCURL, {> <ID, ll> <ASSIGNOP, => <ID, ll> <ADDOP, +> <CONST_INT, 3> <SEMICOLON, ;> <RCURL, }> <LPAREN, (> <ID, ll> <RPAREN, )> <SEMICOLON, ;> <LPAREN, (> <ID, k> <RPAREN, )> <SEMICOLON, ;> <RETURN> <CONST_INT, 0> <SEMICOLON, ;> <RCURL, }> 